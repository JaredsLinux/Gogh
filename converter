#!/usr/bin/env python3.9

import re
import dataclasses
import typing
import pathlib
import os

colors_regex = re.compile(r"COLOR_[0-9]{2}=['\"](.*?)['\"]")
background_regex = re.compile(r"BACKGROUND_COLOR=['\"](.*?)['\"]")
foreground_regex = re.compile(r"FOREGROUND_COLOR=['\"](.*?)['\"]")
name_regex = re.compile("PROFILE_NAME=['\"](.*?)['\"]")


@dataclasses.dataclass
class Profile:
    """
    Class representation a Gough profile that has
    been parsed
    """

    path: pathlib.Path
    colors: typing.List[str] = dataclasses.field(default_factory=lambda: [])
    background: str = ""
    foreground: str = ""
    name: str = ""

    def __post_init__(self):
        with open(self.path, "r", encoding="utf-8") as file_pointer:
            content = file_pointer.read()
            self.colors = colors_regex.findall(content)
            try:
                self.background = background_regex.search(content).group(1)
                self.foreground = foreground_regex.search(content).group(1)
            except AttributeError:
                print(self.path)
            self.name = name_regex.search(content).group(1)

    def dump_urxvt(self, output: pathlib.Path) -> str:
        """
        Dump the currently parsed data to a
        Urxvt configuration
        """

        colors = '\n'.join([f'Urxvt*color{i}:\t\t\t{color}' for i,
                            color in enumerate(self.colors)])
        content = [
            f"! Profile: {self.name}",
            colors,
            f"Urxvt.background: [95]{self.background}",
            f"Urxvt.foreground: {self.foreground}"
        ]
        with open(output, "w", encoding="utf-8") as file_pointer:
            file_pointer.write("\n\n".join(content))

DESTINATION = pathlib.Path("converted")
SOURCE = pathlib.Path("./themes")

if not DESTINATION.is_dir():
    DESTINATION.mkdir(parents=True)

for path in os.listdir(SOURCE):
    DEST = path.split('.')[0]
    Profile(f'{SOURCE}/{path}').dump_urxvt(f'{DESTINATION}/{DEST}')
